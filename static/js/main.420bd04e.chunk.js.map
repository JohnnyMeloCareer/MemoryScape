{"version":3,"sources":["components/Header/Header.js","components/Navbar/Navbar.js","components/SkillCard/SkillCard.js","components/Wrapper/Wrapper.js","components/Modal/Modal.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","Navbar","id","href","rightWrong","score","topScore","SkillCard","value","onClick","handleClick","alt","name","src","image","Wrapper","children","Modal","message","class","replayGame","App","state","skill","currentScore","winLoss","isModalOpen","clicked","console","log","_this","indexOf","handleIncrement","setState","concat","handleReset","newScore","toggleModal","handleShuffle","shuffleSkill","arrayShuffle","_this2","this","components_Modal_Modal","components_Navbar_Navbar","components_Header_Header","components_Wrapper_Wrapper","map","components_SkillCard_SkillCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.420bd04e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => (\r\n    <div className=\"headContent\">\r\n        <div className=\"container\">\r\n            <h1 className=\"display-4\">Click Scape</h1>\r\n            <p className=\"lead\">Total of 12 skills! Pick all of them without repeating any to win the game.</p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;","// Import react from react\r\n// Logic\r\n// Import \"./Navbar.css\"\r\n// State component that takes in props\r\n// Navbar will take in props\r\n// Either take in props from the card, or it going to have it own state\r\n\r\nimport React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = props => (\r\n  <nav className=\"navbar navbar-expand-md navbar-dark bg-color\">\r\n    <div className=\"navbar-collapse order-1 order-md-0 dia;-collapse2\">\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        <li id=\"currentScore\">\r\n          <a className=\"nav-link\" href=\"/\">\r\n            Click Scape\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div className=\"mx-auto order-0\">\r\n      <span className=\"nav-item\">\r\n        <span className=\"nav-link\" id=\"rw\">\r\n          {props.rightWrong}\r\n        </span>\r\n      </span>\r\n    </div>\r\n    <div className=\"navbar-collapse order-3 dual-collapse2\">\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <span className=\"nav-link\" id=\"currentScore\">\r\n            Current Score: {props.score}\r\n          </span>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <span className=\"nav-link\" id=\"topScore\">\r\n            Top Score: {props.topScore}\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport \"./SkillCard.css\";\r\n\r\nconst SkillCard = props => (\r\n\r\n  <div\r\n    className=\"card\"\r\n    value={props.id}\r\n    onClick={() => props.handleClick(props.id)}\r\n  >\r\n  <div className=\"img-container\">\r\n  <img className=\"click-item\" alt={props.name} src={props.image} /> \r\n  </div>\r\n    </div>\r\n);\r\n\r\nexport default SkillCard;\r\n","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = props => (\r\n    <div className=\"resultModal\">\r\n        <div id=\"modalContent\">\r\n            <h1>{props.message}</h1>\r\n            <br></br>\r\n            <button class=\"btn btn-danger\" onClick= {props.replayGame}>Replay the Game!</button>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Modal; ","import React, { Component } from \"react\";\r\n// import logo from './logo.svg';\r\nimport Header from \"./components/Header\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport SkillCard from \"./components/SkillCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Modal from \"./components/Modal\";\r\nimport arrayShuffle from \"array-shuffle\";\r\nimport skill from \"./skill.json\";\r\nimport \"./App.css\";\r\n\r\n// State the objects\r\nclass App extends Component {\r\n  state = {\r\n    skill,\r\n    currentScore: 0,\r\n    topScore: 0,\r\n    winLoss: \"\",\r\n    isModalOpen: false,\r\n\r\n    // Add to Array if Add Click is true\r\n    clicked: []\r\n  };\r\n  // Setting a setState object to listen for a click which will either Increment or decrement\r\n  handleClick = id => {\r\n    console.log(\"button clicked\");\r\n    if (this.state.clicked.indexOf(id) === -1) {\r\n      this.handleIncrement();\r\n      this.setState({ clicked: this.state.clicked.concat(id) });\r\n    } else {\r\n      this.handleReset();\r\n    }\r\n  };\r\n\r\n  // Increment +1 with an alert\r\n  handleIncrement = () => {\r\n    const newScore = this.state.currentScore + 1;\r\n    console.log(\"Increment counter \" + newScore);\r\n    this.setState({\r\n      currentScore: newScore\r\n    });\r\n    if (newScore === 12) {\r\n      this.setState({ winLoss: \"Congrats! Would you like to play again?\" });\r\n      this.toggleModal();\r\n      if (newScore >= this.state.topScore) {\r\n        this.setState({ topScore: newScore });\r\n      }\r\n    } else {\r\n      this.handleShuffle();\r\n    }\r\n  };\r\n\r\n  // Reset the handle with an alert\r\n  handleReset = () => {\r\n    this.setState({\r\n      currentScore: 0,\r\n      topScore: this.state.topScore,\r\n      winLoss: \"You lose, try again!\",\r\n      clicked: []\r\n    });\r\n    if (this.state.currentScore >= this.state.topScore) {\r\n      this.setState({ topScore: this.state.currentScore });\r\n    }\r\n    this.toggleModal();\r\n  };\r\n\r\n  // setState is rending the toggleable Modal\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  };\r\n\r\n  // Using the Modal component, they can click to replay aka refresh the page\r\n  replayGame = () => {\r\n    this.toggleModal();\r\n  };\r\n// Using the NPM package arrayShuffle, to shuffle the cards when clicked.\r\n  handleShuffle = () => {\r\n    let shuffleSkill = arrayShuffle(skill);\r\n    this.setState({ skill: shuffleSkill });\r\n  };\r\n// The components that are being rendered on to the main page.\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.isModalOpen ? (\r\n          <Modal message={this.state.winLoss} replayGame={this.replayGame} />\r\n        ) : null}\r\n\r\n        <Navbar\r\n          score={this.state.currentScore}\r\n          topScore={this.state.topScore}\r\n          winLoss={this.state.winLoss}\r\n        />\r\n        <Header />\r\n        <Wrapper>\r\n          {this.state.skill.map(skill => (\r\n            // This going to allow us to render a component\r\n            <SkillCard\r\n              key={skill.id}\r\n              handleClick={this.handleClick}\r\n              handleIncrement={this.handleIncrement}\r\n              handleReset={this.handleReset}\r\n              handleShuffle={this.handleShuffle}\r\n              id={skill.id}\r\n              image={skill.image}\r\n            />\r\n          ))}\r\n        </Wrapper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n/* <SkillCard id=\"2\" name=\"test\" image=\"./images/Farming.png\" />\r\n<SkillCard id=\"3\" name=\"test\" image=\"./images/Firemaking.png\" />\r\n<SkillCard id=\"4\" name=\"test\" image=\"./images/Fishing.png\" />\r\n<SkillCard id=\"5\" name=\"test\" image=\"./images/Fletching.png\" />\r\n<SkillCard id=\"6\" name=\"test\" image=\"./images/Mining.png\" />\r\n<SkillCard id=\"7\" name=\"test\" image=\"./images/Agility.png\" />\r\n<SkillCard id=\"8\" name=\"test\" image=\"./images/Attack.png\" />\r\n<SkillCard id=\"9\" name=\"test\" image=\"./images/HP.png\" />\r\n<SkillCard id=\"10\" name=\"test\" image=\"./images/Prayer.png\" />\r\n<SkillCard id=\"11\" name=\"test\" image=\"./images/Runecrafti*/\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}